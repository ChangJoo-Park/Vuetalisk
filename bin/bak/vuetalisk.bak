#!/usr/bin/env node

const path = require('path')
const fs = require('fs')

const cwd = process.cwd()
const mwd = path.join(__dirname, '..')

let dirs = [mwd]
if (cwd != mwd) dirs.push(cwd)

const commands = {}
for (const mdir of [mwd, cwd]) {
  for (const bdir of ['build', 'bin']) {
    const dir = path.join(mdir, bdir)
    if (fs.existsSync(dir)) {
      fs.readdirSync(dir)
        .filter(f => f.match(/^vuetalisk-.+\.js$/))
        .forEach(f => {
          const match = f.match(/^vuetalisk-([\w-]+)\.js$/)
          if (!match) return
          commands[match[1]] = {dir, file: f}
        })
    }
  }
}

for (const command in commands) {
  const info = commands[command]
  const fd = fs.openSync(path.join(info.dir, info.file), 'r')
  let buffer = Buffer.alloc(500) 
  fs.readSync(fd, buffer, 0, 500, 0)
  fs.closeSync(fd)
  let str = buffer.toString()
  const match = str.match(/^\/\/\s*desc(?:ription)?:?\s+(.*)$/m)
  if (match) commands[command].desc = match[1]
}

console.log(commands)


const commander = require('commander')


